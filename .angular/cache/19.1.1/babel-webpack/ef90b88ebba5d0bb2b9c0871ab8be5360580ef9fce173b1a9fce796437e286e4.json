{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, inject, ChangeDetectorRef, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nfunction MatPaginator_Conditional_2_Conditional_3_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageSizeOption_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pageSizeOption_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pageSizeOption_r3, \" \");\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 14)(1, \"mat-select\", 16, 0);\n    i0.ɵɵlistener(\"selectionChange\", function MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1._changePageSize($event.value));\n    });\n    i0.ɵɵrepeaterCreate(3, MatPaginator_Conditional_2_Conditional_3_For_4_Template, 2, 2, \"mat-option\", 17, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_2_Conditional_3_Template_div_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const selectRef_r4 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(selectRef_r4.open());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r1._formFieldAppearance)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.pageSize)(\"disabled\", ctx_r1.disabled)(\"aria-labelledby\", ctx_r1._pageSizeLabelId)(\"panelClass\", ctx_r1.selectConfig.panelClass || \"\")(\"disableOptionCentering\", ctx_r1.selectConfig.disableOptionCentering);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx_r1._displayedPageSizeOptions);\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\nfunction MatPaginator_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatPaginator_Conditional_2_Conditional_3_Template, 6, 7, \"mat-form-field\", 14)(4, MatPaginator_Conditional_2_Conditional_4_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1._pageSizeLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1._intl.itemsPerPageLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length > 1 ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length <= 1 ? 4 : -1);\n  }\n}\nfunction MatPaginator_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._buttonClicked(0, ctx_r1._previousButtonsDisabled()));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"disabled\", ctx_r1._previousButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\nfunction MatPaginator_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._buttonClicked(ctx_r1.getNumberOfPages() - 1, ctx_r1._nextButtonsDisabled()));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r1._nextButtonsDisabled())(\"disabled\", ctx_r1._nextButtonsDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.lastPageLabel);\n  }\n}\nclass MatPaginatorIntl {\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  changes = new Subject();\n  /** A label for the page size selector. */\n  itemsPerPageLabel = 'Items per page:';\n  /** A label for the button that increments the current page. */\n  nextPageLabel = 'Next page';\n  /** A label for the button that decrements the current page. */\n  previousPageLabel = 'Previous page';\n  /** A label for the button that moves to the first page. */\n  firstPageLabel = 'First page';\n  /** A label for the button that moves to the last page. */\n  lastPageLabel = 'Last page';\n  /** A label for the range of items within the current page and the length of the whole list. */\n  getRangeLabel = (page, pageSize, length) => {\n    if (length == 0 || pageSize == 0) {\n      return `0 of ${length}`;\n    }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n    return `${startIndex + 1} – ${endIndex} of ${length}`;\n  };\n  static ɵfac = function MatPaginatorIntl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginatorIntl)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatPaginatorIntl,\n    factory: MatPaginatorIntl.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n  /** The current page index. */\n  pageIndex;\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex;\n  /** The current page size. */\n  pageSize;\n  /** The current total number of items being paged. */\n  length;\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n  _intl = inject(MatPaginatorIntl);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  /** If set, styles the \"page size\" form field with the designated style. */\n  _formFieldAppearance;\n  /** ID for the DOM node containing the paginator's items per page label. */\n  _pageSizeLabelId = inject(_IdGenerator).getId('mat-paginator-page-size-label-');\n  _intlChanges;\n  _isInitialized = false;\n  _initializedStream = new ReplaySubject(1);\n  /**\n   * Theme color of the underlying form controls. This API is supported in M2\n   * themes only,it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/paginator/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  get pageIndex() {\n    return this._pageIndex;\n  }\n  set pageIndex(value) {\n    this._pageIndex = Math.max(value || 0, 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  _pageIndex = 0;\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  get length() {\n    return this._length;\n  }\n  set length(value) {\n    this._length = value || 0;\n    this._changeDetectorRef.markForCheck();\n  }\n  _length = 0;\n  /** Number of items to display on a page. By default set to 50. */\n  get pageSize() {\n    return this._pageSize;\n  }\n  set pageSize(value) {\n    this._pageSize = Math.max(value || 0, 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  _pageSize;\n  /** The set of provided page size options to display to the user. */\n  get pageSizeOptions() {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value) {\n    this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n    this._updateDisplayedPageSizeOptions();\n  }\n  _pageSizeOptions = [];\n  /** Whether to hide the page size selection UI from the user. */\n  hidePageSize = false;\n  /** Whether to show the first/last buttons UI to the user. */\n  showFirstLastButtons = false;\n  /** Used to configure the underlying `MatSelect` inside the paginator. */\n  selectConfig = {};\n  /** Whether the paginator is disabled. */\n  disabled = false;\n  /** Event emitted when the paginator changes the page size or page index. */\n  page = new EventEmitter();\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions;\n  /** Emits when the paginator is initialized. */\n  initialized = this._initializedStream;\n  constructor() {\n    const _intl = this._intl;\n    const defaults = inject(MAT_PAGINATOR_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n    if (defaults) {\n      const {\n        pageSize,\n        pageSizeOptions,\n        hidePageSize,\n        showFirstLastButtons\n      } = defaults;\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n      if (hidePageSize != null) {\n        this.hidePageSize = hidePageSize;\n      }\n      if (showFirstLastButtons != null) {\n        this.showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n    this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._initializedStream.next();\n  }\n  ngOnDestroy() {\n    this._initializedStream.complete();\n    this._intlChanges.unsubscribe();\n  }\n  /** Advances to the next page if it exists. */\n  nextPage() {\n    if (this.hasNextPage()) {\n      this._navigate(this.pageIndex + 1);\n    }\n  }\n  /** Move back to the previous page if it exists. */\n  previousPage() {\n    if (this.hasPreviousPage()) {\n      this._navigate(this.pageIndex - 1);\n    }\n  }\n  /** Move to the first page if not already there. */\n  firstPage() {\n    // hasPreviousPage being false implies at the start\n    if (this.hasPreviousPage()) {\n      this._navigate(0);\n    }\n  }\n  /** Move to the last page if not already there. */\n  lastPage() {\n    // hasNextPage being false implies at the end\n    if (this.hasNextPage()) {\n      this._navigate(this.getNumberOfPages() - 1);\n    }\n  }\n  /** Whether there is a previous page. */\n  hasPreviousPage() {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n  /** Whether there is a next page. */\n  hasNextPage() {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n  /** Calculate the number of pages */\n  getNumberOfPages() {\n    if (!this.pageSize) {\n      return 0;\n    }\n    return Math.ceil(this.length / this.pageSize);\n  }\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  _updateDisplayedPageSizeOptions() {\n    if (!this._isInitialized) {\n      return;\n    }\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  _emitPageEvent(previousPageIndex) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n  /** Navigates to a specific page index. */\n  _navigate(index) {\n    const previousIndex = this.pageIndex;\n    if (index !== previousIndex) {\n      this.pageIndex = index;\n      this._emitPageEvent(previousIndex);\n    }\n  }\n  /**\n   * Callback invoked when one of the navigation buttons is called.\n   * @param targetIndex Index to which the paginator should navigate.\n   * @param isDisabled Whether the button is disabled.\n   */\n  _buttonClicked(targetIndex, isDisabled) {\n    // Note that normally disabled buttons won't dispatch the click event, but the paginator ones\n    // do, because we're using `disabledInteractive` to allow them to be focusable. We need to\n    // check here to avoid the navigation.\n    if (!isDisabled) {\n      this._navigate(targetIndex);\n    }\n  }\n  static ɵfac = function MatPaginator_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginator)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPaginator,\n    selectors: [[\"mat-paginator\"]],\n    hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-paginator\"],\n    inputs: {\n      color: \"color\",\n      pageIndex: [2, \"pageIndex\", \"pageIndex\", numberAttribute],\n      length: [2, \"length\", \"length\", numberAttribute],\n      pageSize: [2, \"pageSize\", \"pageSize\", numberAttribute],\n      pageSizeOptions: \"pageSizeOptions\",\n      hidePageSize: [2, \"hidePageSize\", \"hidePageSize\", booleanAttribute],\n      showFirstLastButtons: [2, \"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute],\n      selectConfig: \"selectConfig\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      page: \"page\"\n    },\n    exportAs: [\"matPaginator\"],\n    features: [i0.ɵɵInputTransformsFeature],\n    decls: 14,\n    vars: 12,\n    consts: [[\"selectRef\", \"\"], [1, \"mat-mdc-paginator-outer-container\"], [1, \"mat-mdc-paginator-container\"], [1, \"mat-mdc-paginator-page-size\"], [1, \"mat-mdc-paginator-range-actions\"], [\"aria-live\", \"polite\", 1, \"mat-mdc-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-previous\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-next\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"disabled\"], [1, \"mat-mdc-paginator-page-size-label\"], [1, \"mat-mdc-paginator-page-size-select\", 3, \"appearance\", \"color\"], [1, \"mat-mdc-paginator-page-size-value\"], [\"hideSingleSelectionIndicator\", \"\", 3, \"selectionChange\", \"value\", \"disabled\", \"aria-labelledby\", \"panelClass\", \"disableOptionCentering\"], [3, \"value\"], [1, \"mat-mdc-paginator-touch-target\", 3, \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n    template: function MatPaginator_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n        i0.ɵɵtemplate(2, MatPaginator_Conditional_2_Template, 5, 4, \"div\", 3);\n        i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, MatPaginator_Conditional_6_Template, 3, 4, \"button\", 6);\n        i0.ɵɵelementStart(7, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n          return ctx._buttonClicked(ctx.pageIndex - 1, ctx._previousButtonsDisabled());\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 8);\n        i0.ɵɵelement(9, \"path\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(10, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n          return ctx._buttonClicked(ctx.pageIndex + 1, ctx._nextButtonsDisabled());\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(11, \"svg\", 8);\n        i0.ɵɵelement(12, \"path\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, MatPaginator_Conditional_13_Template, 3, 4, \"button\", 12);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx.hidePageSize ? 2 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.showFirstLastButtons ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"disabled\", ctx._previousButtonsDisabled());\n        i0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"disabled\", ctx._nextButtonsDisabled());\n        i0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx.showFirstLastButtons ? 13 : -1);\n      }\n    },\n    dependencies: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n    styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginator, [{\n    type: Component,\n    args: [{\n      selector: 'mat-paginator',\n      exportAs: 'matPaginator',\n      host: {\n        'class': 'mat-mdc-paginator',\n        'role': 'group'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n      template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    pageIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    length: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSizeOptions: [{\n      type: Input\n    }],\n    hidePageSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastButtons: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectConfig: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    page: [{\n      type: Output\n    }]\n  });\n})();\nclass MatPaginatorModule {\n  static ɵfac = function MatPaginatorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginatorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatPaginatorModule,\n    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n    exports: [MatPaginator]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n      exports: [MatPaginator],\n      providers: [MAT_PAGINATOR_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };","map":{"version":3,"names":["i0","Injectable","Optional","SkipSelf","InjectionToken","inject","ChangeDetectorRef","numberAttribute","EventEmitter","booleanAttribute","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","Subject","ReplaySubject","MatIconButton","MatButtonModule","MatSelect","MatSelectModule","MatTooltip","MatTooltipModule","_IdGenerator","MatOption","MatFormField","MatPaginator_Conditional_2_Conditional_3_For_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","pageSizeOption_r3","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","MatPaginator_Conditional_2_Conditional_3_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_changePageSize","value","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","MatPaginator_Conditional_2_Conditional_3_Template_div_click_5_listener","selectRef_r4","ɵɵreference","open","_formFieldAppearance","color","pageSize","disabled","_pageSizeLabelId","selectConfig","panelClass","disableOptionCentering","ɵɵrepeater","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","ɵɵtextInterpolate","MatPaginator_Conditional_2_Template","ɵɵtemplate","ɵɵattribute","_intl","itemsPerPageLabel","ɵɵconditional","length","MatPaginator_Conditional_6_Template","_r5","MatPaginator_Conditional_6_Template_button_click_0_listener","_buttonClicked","_previousButtonsDisabled","ɵɵnamespaceSVG","ɵɵelement","firstPageLabel","MatPaginator_Conditional_13_Template","_r6","MatPaginator_Conditional_13_Template_button_click_0_listener","getNumberOfPages","_nextButtonsDisabled","lastPageLabel","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","ɵfac","MatPaginatorIntl_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","pageIndex","previousPageIndex","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginator","_changeDetectorRef","getId","_intlChanges","_isInitialized","_initializedStream","_pageIndex","markForCheck","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","map","p","hidePageSize","showFirstLastButtons","initialized","constructor","defaults","optional","subscribe","formFieldAppearance","ngOnInit","next","ngOnDestroy","complete","unsubscribe","nextPage","hasNextPage","_navigate","previousPage","hasPreviousPage","firstPage","lastPage","maxPageIndex","ceil","floor","_emitPageEvent","slice","indexOf","push","sort","a","b","emit","index","previousIndex","targetIndex","isDisabled","MatPaginator_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","inputs","outputs","exportAs","features","ɵɵInputTransformsFeature","decls","vars","consts","template","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","ɵɵnamespaceHTML","MatPaginator_Template_button_click_10_listener","dependencies","styles","encapsulation","changeDetection","selector","host","OnPush","None","imports","transform","MatPaginatorModule","MatPaginatorModule_Factory","ɵmod","ɵɵdefineNgModule","exports","ɵinj","ɵɵdefineInjector","providers"],"sources":["C:/Users/Elisinha/Documents/app_receitas/Site_Sobremesas/Site_Sobremesas/node_modules/@angular/material/fesm2022/paginator.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, inject, ChangeDetectorRef, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     */\n    changes = new Subject();\n    /** A label for the page size selector. */\n    itemsPerPageLabel = 'Items per page:';\n    /** A label for the button that increments the current page. */\n    nextPageLabel = 'Next page';\n    /** A label for the button that decrements the current page. */\n    previousPageLabel = 'Previous page';\n    /** A label for the button that moves to the first page. */\n    firstPageLabel = 'First page';\n    /** A label for the button that moves to the last page. */\n    lastPageLabel = 'Last page';\n    /** A label for the range of items within the current page and the length of the whole list. */\n    getRangeLabel = (page, pageSize, length) => {\n        if (length == 0 || pageSize == 0) {\n            return `0 of ${length}`;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n        return `${startIndex + 1} – ${endIndex} of ${length}`;\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n    /** The current page index. */\n    pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * @breaking-change 8.0.0 To be made into a required property.\n     */\n    previousPageIndex;\n    /** The current page size. */\n    pageSize;\n    /** The current total number of items being paged. */\n    length;\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    _intl = inject(MatPaginatorIntl);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    /** If set, styles the \"page size\" form field with the designated style. */\n    _formFieldAppearance;\n    /** ID for the DOM node containing the paginator's items per page label. */\n    _pageSizeLabelId = inject(_IdGenerator).getId('mat-paginator-page-size-label-');\n    _intlChanges;\n    _isInitialized = false;\n    _initializedStream = new ReplaySubject(1);\n    /**\n     * Theme color of the underlying form controls. This API is supported in M2\n     * themes only,it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/paginator/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    _pageIndex = 0;\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    _length = 0;\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    _pageSize;\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    _pageSizeOptions = [];\n    /** Whether to hide the page size selection UI from the user. */\n    hidePageSize = false;\n    /** Whether to show the first/last buttons UI to the user. */\n    showFirstLastButtons = false;\n    /** Used to configure the underlying `MatSelect` inside the paginator. */\n    selectConfig = {};\n    /** Whether the paginator is disabled. */\n    disabled = false;\n    /** Event emitted when the paginator changes the page size or page index. */\n    page = new EventEmitter();\n    /** Displayed set of page size options. Will be sorted and include current page size. */\n    _displayedPageSizeOptions;\n    /** Emits when the paginator is initialized. */\n    initialized = this._initializedStream;\n    constructor() {\n        const _intl = this._intl;\n        const defaults = inject(MAT_PAGINATOR_DEFAULT_OPTIONS, {\n            optional: true,\n        });\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (this.hasNextPage()) {\n            this._navigate(this.pageIndex + 1);\n        }\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (this.hasPreviousPage()) {\n            this._navigate(this.pageIndex - 1);\n        }\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (this.hasPreviousPage()) {\n            this._navigate(0);\n        }\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (this.hasNextPage()) {\n            this._navigate(this.getNumberOfPages() - 1);\n        }\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    /** Navigates to a specific page index. */\n    _navigate(index) {\n        const previousIndex = this.pageIndex;\n        if (index !== previousIndex) {\n            this.pageIndex = index;\n            this._emitPageEvent(previousIndex);\n        }\n    }\n    /**\n     * Callback invoked when one of the navigation buttons is called.\n     * @param targetIndex Index to which the paginator should navigate.\n     * @param isDisabled Whether the button is disabled.\n     */\n    _buttonClicked(targetIndex, isDisabled) {\n        // Note that normally disabled buttons won't dispatch the click event, but the paginator ones\n        // do, because we're using `disabledInteractive` to allow them to be focusable. We need to\n        // check here to avoid the navigation.\n        if (!isDisabled) {\n            this._navigate(targetIndex);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginator, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.0-rc.0\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\", \"canSelectNullableOptions\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.0-rc.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}